{
  "Print to console": {
    "prefix": "logo",
    "body": ["console.log({ $1: $2 })"],
    "description": "Log output to console"
  },
  "Depth console": {
    "prefix": "logod",
    "body": ["console.dir({ $1: $1 }, { depth: $2 })"]
  },
  "Here console": {
    "prefix": "loghere",
    "body": [
      "console.log('#########################  HERE $1 #########################')"
    ]
  },
  "Jest test suite": {
    "prefix": "jstsuite",
    "body": [
      "describe('Test Suite ...', () => {",
      "  beforeAll('Test...', () => {})",
      "  afterAll('Test...', () => {})",
      "  it('Test...', () => {",
      "  });",
      "});"
    ]
  },
  "Jest test suite async": {
    "prefix": "jstsuitea",
    "body": [
      "describe('Test Suite ...',  () => {",
      "  beforeAll('Test...', async () => {})",
      "  afterAll('Test...', async () => {})",
      "  it('Test...', async () => {",
      "  });",
      "});"
    ]
  },
  "Basic inline doc": {
    "prefix": "idocb",
    "body": [
      "/**",
      " * @name",
      " * @description",
      " * @example",
      " * @author",
      "*/"
    ]
  },
  "Console time": {
    "prefix": "clgt",
    "body": ["console.time('$1')", "console.timeEnd('$1')"]
  },
  "Time out": {
    "prefix": "timeO",
    "body": ["setTimeout(() => {", "console.log({$1:$2})", "}, 3000)"]
  },
  "Async iife": {
    "prefix": "aiife",
    "body": ["(async () => {", "", "})()"]
  },
  "Call back": {
    "prefix": "cb",
    "body": ["($1) => {", "$2", "}"]
  },
  "Call back destruct params": {
    "prefix": "cbd",
    "body": ["({ $1 }) => {", "$2", "}"]
  },
  "Call back return": {
    "prefix": "cbr",
    "body": ["($1) => $2"]
  },
  "Call back destruct params return": {
    "prefix": "cbdr",
    "body": ["({ $1 }) => $2"]
  },
  "Ramada groupBy prop": {
    "prefix": "rgbp",
    "body": ["groupBy(prop('$2'), $1)"]
  },
  "Ramada indexBy prop": {
    "prefix": "ribp",
    "body": ["indexBy(prop('$2'), $1)"]
  },
  "private readonly": {
    "prefix": "pri-ro",
    "body": ["private readonly $1"]
  },
  "public readonly": {
    "prefix": "pub-ro",
    "body": ["public readonly $1"]
  },
  "write file": {
    "prefix": "wrt-file-sync",
    "body": ["writeFileSync(\"./$1.json\", JSON.stringify($2))"]
  }
}
